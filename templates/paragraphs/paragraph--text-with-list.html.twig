{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'problem-sec'
  ]
%}

{% block paragraph %}
  <section{{attributes.addClass(classes)}} id="{{ paragraph.field_title.value|replace({' ': '', '?': ''}) }}">
    {% block content %}
    <div class="container">
      {% if paragraph.field_title.value is not empty %} 
        <div class="title">
          <h2><span class="highlight-white highlight">{{ paragraph.field_title.value }}</span></h2>
        </div>
      {% endif %}
      {% if paragraph.field_description.value|striptags|trim is not empty %} 
        <div class="description">
          {{ content.field_description }}
        </div>
      {% endif %}
      <div class="icon-listing">
        {% if paragraph.field_list_items %}
          <ul>
            {% for item in paragraph.field_list_items if key|first != '#' %}
              <li>
                {% set image_field = item.entity.field_icons.entity.uri.value %}
                {% if image_field is not empty %}
                  {% set image_url = file_url(image_field) %}
                {% else %}
                  {% set image_url = '' %}
                {% endif %}
                {% if image_url is not empty %}
                  <img src="{{ image_url }}">
                {% endif %}
                {% if item.entity.field_description.value is not empty %}
                  {{ item.entity.field_description.value|raw }}
                {% endif %}
              </li>
            {% endfor %}
          </ul>
        {% endif %}
      </div>
      <div class="source-link">
        <p>
          <span>Sources:</span>
          {% for linkItem in paragraph.field_source_link if key|first != '#' %}
            {% if linkItem.uri is not empty %}
              <a href="{{ linkItem.getUrl().toString() }}">{{ linkItem.title|raw }}</a>
            {% endif %}
          {% endfor %}
        </p>
      </div>
    </div>
    {% endblock %}
  </section>
{% endblock paragraph %}
